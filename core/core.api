service core-api {
	@handler UserLogin
	post /user/login(LoginRequest) returns (LoginResponse)
	
	@handler UserDetail
	get /user/detail(UserDetailRequest) returns(UserDetailResponse)
	
	@handler UserRegister
	post /user/register(UserRegisterRequest) returns(UserRegisterResponse)
	
	@handler MailCodeSend
	post /user/mailcodesend(MailCodeSendRequest) returns(MailCodeSendResponse)
	
}

type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginResponse {
	Token string `json:"token"`
}

type UserDetailRequest {
	Identity string `json:"identity"`
}

type UserDetailResponse {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type MailCodeSendRequest {
	Mail string `json:"mail"`
}

type MailCodeSendResponse {
}

type UserRegisterRequest {
	Name     string `json:"name"`
	Mail     string `json:"mail"`
	Code     string `json:"code"`
	Password string `json:"password"`
}

type UserRegisterResponse {}

@server (
	middleware: Auth
)

service core-api {
	@handler FileUpload
	post /file/upload(FileUploadRequest) returns (FileUploadResponse)
	
	// 用户文件关联存储
	@handler UserRepository
	post /file/user/repo/save(UserRepoSaveRequeset) returns (UserRepoSaveResponse)

	// 用户文件列表
	@handler UserFileList
	get /file/list(UserFileListRequest) returns (UserFileListResponse)
}

type UserFileListRequest {
	Id   int `json:"id,optional"`
	Page int `json:"page,optional"`
	Size int `json:"size,optional"`
}

type UserFileListResponse {
	Files []*UserFile `json:"files"`
	Count int         `json:"count"`
}

type UserFile {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	Size               int64  `json:"size"`
}

type UserRepoSaveRequeset {
	ParentId           int64  `json:"parentId"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepoSaveResponse {}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadResponse {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}