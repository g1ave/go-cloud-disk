service core-api {
	@handler UserLogin
	post /user/login(LoginRequest) returns (LoginResponse)
	
	@handler UserDetail
	get /user/detail(UserDetailRequest) returns(UserDetailResponse)
	
	@handler UserRegister
	post /user/register(UserRegisterRequest) returns(UserRegisterResponse)
	
	@handler MailCodeSend
	post /user/mailcodesend(MailCodeSendRequest) returns(MailCodeSendResponse)
	
}

type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginResponse {
	Token string `json:"token"`
}

type UserDetailRequest {
	Identity string `json:"identity"`
}

type UserDetailResponse {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type MailCodeSendRequest {
	Mail string `json:"mail"`
}

type MailCodeSendResponse {
}

type UserRegisterRequest {
	Name     string `json:"name"`
	Mail     string `json:"mail"`
	Code     string `json:"code"`
	Password string `json:"password"`
}

type UserRegisterResponse {}

@server (
	middleware: Auth
)

service core-api {
	@handler FileUpload
	post /file/upload(FileUploadRequest) returns (FileUploadResponse)
	
	// connect user to saved file
	@handler UserRepository
	post /file/user/repo/save(UserRepoSaveRequeset) returns (UserRepoSaveResponse)
	
	// user file list
	@handler UserFileList
	get /file/list(UserFileListRequest) returns (UserFileListResponse)
	
	@handler FileNameUpdate
	post /file/name/update(FileNameUpdateRequest) returns (FileNameUpdateResponse)
	
	@handler FolderCreate
	post /file/folder/create(FileFolderCreateRequest) returns (FileFolderCreateResponse)
	
	@handler DeleteFile
	post /file/delete(DeleteFileRequest) returns (DeleteFileResponse)
	
	@handler MoveFile
	post /file/move(MoveFileRequest) returns (MoveFileResponse)
	
	// Create link to share file
	@handler FileShareCreate
	post /file/share/create(FileShareCreateRequest) returns(FileShareCreateResponse)
	
	// Query file details according shared link
	@handler FileShareDetail
	get /file/share/details/:identity(FileShareDetailsRequest) returns (FileShareDetailsResponse)
	
	// Save shared file
	@handler FileShareSave
	post /file/share/save(FileShareSaveRequest) returns (FileShareSaveResponse)
}

type FileShareSaveRequest {
	RepoIdentity string `json:"repo_identity"`
	ParentId     int    `json:"parent_id"`
	Name         string `json:"name"`
}

type FileShareSaveResponse {
	Identity string `json:"identity"`
}
type FileShareDetailsRequest {
	Identity string `path:"identity"`
}

type FileShareDetailsResponse {
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Size               int64  `json:"size"`
	Path               string `json:"path"`
}

type FileShareCreateRequest {
	UserRepoIdentity string `json:"user_repo_identity"`
	ExpiredTime      int    `json:"expired_time"`
}

type FileShareCreateResponse {
	Identity string `json:"identity"`
}
type MoveFileRequest {
	Identity       string `json:"identity"`
	ParentIdentity string `json:"parent_identity"`
}

type MoveFileResponse {}

type DeleteFileRequest {
	Identity string `json:"identity"`
}

type DeleteFileResponse {}

type FileFolderCreateRequest {
	ParentId int    `json:"parent_id"`
	Name     string `json:"name"`
}

type FileFolderCreateResponse {
	Identity string `json:"identity"`
}

type FileNameUpdateRequest {
	Identity string `json:"identity"`
	Name     string `json:"name"`
}
type FileNameUpdateResponse {}

type UserFileListRequest {
	Id   int `json:"id,optional"`
	Page int `json:"page,optional"`
	Size int `json:"size,optional"`
}

type UserFileListResponse {
	Files []*UserFile `json:"files"`
	Count int         `json:"count"`
}

type UserFile {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	Size               int64  `json:"size"`
}

type UserRepoSaveRequeset {
	ParentId           int    `json:"parent_id"`
	RepositoryIdentity string `json:"repository_identity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepoSaveResponse {}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadResponse {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}